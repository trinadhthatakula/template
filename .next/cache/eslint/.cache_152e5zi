[{"F:\\trinadh\\Portfolio\\template\\pages\\api\\blog\\edit.js":"1","F:\\trinadh\\Portfolio\\template\\pages\\api\\blog\\index.js":"2","F:\\trinadh\\Portfolio\\template\\pages\\api\\portfolio.js":"3","F:\\trinadh\\Portfolio\\template\\pages\\blog\\index.js":"4","F:\\trinadh\\Portfolio\\template\\pages\\blog\\[slug].js":"5","F:\\trinadh\\Portfolio\\template\\pages\\edit.js":"6","F:\\trinadh\\Portfolio\\template\\pages\\index.js":"7","F:\\trinadh\\Portfolio\\template\\pages\\resume.js":"8","F:\\trinadh\\Portfolio\\template\\pages\\_app.js":"9","F:\\trinadh\\Portfolio\\template\\components\\BlogEditor\\index.js":"10","F:\\trinadh\\Portfolio\\template\\components\\Button\\index.js":"11","F:\\trinadh\\Portfolio\\template\\components\\ContentSection\\index.js":"12","F:\\trinadh\\Portfolio\\template\\components\\Cursor\\index.js":"13","F:\\trinadh\\Portfolio\\template\\components\\Footer\\index.js":"14","F:\\trinadh\\Portfolio\\template\\components\\Header\\index.js":"15","F:\\trinadh\\Portfolio\\template\\components\\ProjectResume\\index.js":"16","F:\\trinadh\\Portfolio\\template\\components\\ServiceCard\\index.js":"17","F:\\trinadh\\Portfolio\\template\\components\\Socials\\index.js":"18","F:\\trinadh\\Portfolio\\template\\components\\WorkCard\\index.js":"19","F:\\trinadh\\Portfolio\\template\\components\\Cursor\\useMousePosition.js":"20"},{"size":813,"mtime":1692871084982,"results":"21","hashOfConfig":"22"},{"size":1296,"mtime":1692871084982,"results":"23","hashOfConfig":"22"},{"size":532,"mtime":1692871084982,"results":"24","hashOfConfig":"22"},{"size":4528,"mtime":1692871084982,"results":"25","hashOfConfig":"22"},{"size":3053,"mtime":1692871084982,"results":"26","hashOfConfig":"22"},{"size":34072,"mtime":1692873026823,"results":"27","hashOfConfig":"22"},{"size":4882,"mtime":1692879696450,"results":"28","hashOfConfig":"22"},{"size":4889,"mtime":1692871084983,"results":"29","hashOfConfig":"22"},{"size":250,"mtime":1692871084981,"results":"30","hashOfConfig":"22"},{"size":6048,"mtime":1692871084978,"results":"31","hashOfConfig":"22"},{"size":1243,"mtime":1692871084978,"results":"32","hashOfConfig":"22"},{"size":922,"mtime":1692871084978,"results":"33","hashOfConfig":"22"},{"size":449,"mtime":1692879804596,"results":"34","hashOfConfig":"22"},{"size":1129,"mtime":1692881698278,"results":"35","hashOfConfig":"22"},{"size":6558,"mtime":1692871084979,"results":"36","hashOfConfig":"22"},{"size":874,"mtime":1692871084980,"results":"37","hashOfConfig":"22"},{"size":998,"mtime":1692871084980,"results":"38","hashOfConfig":"22"},{"size":466,"mtime":1692871084980,"results":"39","hashOfConfig":"22"},{"size":843,"mtime":1692871084981,"results":"40","hashOfConfig":"22"},{"size":541,"mtime":1692879584873,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1esb9bs",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\trinadh\\Portfolio\\template\\pages\\api\\blog\\edit.js",[],[],"F:\\trinadh\\Portfolio\\template\\pages\\api\\blog\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\pages\\api\\portfolio.js",[],[],"F:\\trinadh\\Portfolio\\template\\pages\\blog\\index.js",["107"],[],"import Head from \"next/head\";\r\nimport Router, { useRouter } from \"next/router\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { stagger } from \"../../animations\";\r\nimport Button from \"../../components/Button\";\r\nimport Cursor from \"../../components/Cursor\";\r\nimport Header from \"../../components/Header\";\r\nimport data from \"../../data/portfolio.json\";\r\nimport { ISOToDate, useIsomorphicLayoutEffect } from \"../../utils\";\r\nimport { getAllPosts } from \"../../utils/api\";\r\nconst Blog = ({ posts }) => {\r\n  const showBlog = useRef(data.showBlog);\r\n  const text = useRef();\r\n  const router = useRouter();\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    stagger(\r\n      [text.current],\r\n      { y: 40, x: -10, transform: \"scale(0.95) skew(10deg)\" },\r\n      { y: 0, x: 0, transform: \"scale(1)\" }\r\n    );\r\n    if (showBlog.current) stagger([text.current], { y: 30 }, { y: 0 });\r\n    else router.push(\"/\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  const createBlog = () => {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      fetch(\"/api/blog\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }).then(() => {\r\n        router.reload(window.location.pathname);\r\n      });\r\n    } else {\r\n      alert(\"This thing only works in development mode.\");\r\n    }\r\n  };\r\n\r\n  const deleteBlog = (slug) => {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      fetch(\"/api/blog\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          slug,\r\n        }),\r\n      }).then(() => {\r\n        router.reload(window.location.pathname);\r\n      });\r\n    } else {\r\n      alert(\"This thing only works in development mode.\");\r\n    }\r\n  };\r\n  return (\r\n    showBlog.current && (\r\n      <>\r\n        {data.showCursor && <Cursor />}\r\n        <Head>\r\n          <title>Blog</title>\r\n        </Head>\r\n        <div\r\n          className={`container mx-auto mb-10 ${\r\n            data.showCursor && \"cursor-none\"\r\n          }`}\r\n        >\r\n          <Header isBlog={true}></Header>\r\n          <div className=\"mt-10\">\r\n            <h1\r\n              ref={text}\r\n              className=\"mx-auto mob:p-2 text-bold text-6xl laptop:text-8xl w-full\"\r\n            >\r\n              Blog.\r\n            </h1>\r\n            <div className=\"mt-10 grid grid-cols-1 mob:grid-cols-1 tablet:grid-cols-2 laptop:grid-cols-3 justify-between gap-10\">\r\n              {posts &&\r\n                posts.map((post) => (\r\n                  <div\r\n                    className=\"cursor-pointer relative\"\r\n                    key={post.slug}\r\n                    onClick={() => Router.push(`/blog/${post.slug}`)}\r\n                  >\r\n                    <img\r\n                      className=\"w-full h-60 rounded-lg shadow-lg object-cover\"\r\n                      src={post.image}\r\n                      alt={post.title}\r\n                    ></img>\r\n                    <h2 className=\"mt-5 text-4xl\">{post.title}</h2>\r\n                    <p className=\"mt-2 opacity-50 text-lg\">{post.preview}</p>\r\n                    <span className=\"text-sm mt-5 opacity-25\">\r\n                      {ISOToDate(post.date)}\r\n                    </span>\r\n                    {process.env.NODE_ENV === \"development\" && mounted && (\r\n                      <div className=\"absolute top-0 right-0\">\r\n                        <Button\r\n                          onClick={(e) => {\r\n                            deleteBlog(post.slug);\r\n                            e.stopPropagation();\r\n                          }}\r\n                          type={\"primary\"}\r\n                        >\r\n                          Delete\r\n                        </Button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {process.env.NODE_ENV === \"development\" && mounted && (\r\n          <div className=\"fixed bottom-6 right-6\">\r\n            <Button onClick={createBlog} type={\"primary\"}>\r\n              Add New Post +{\" \"}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  const posts = getAllPosts([\r\n    \"slug\",\r\n    \"title\",\r\n    \"image\",\r\n    \"preview\",\r\n    \"author\",\r\n    \"date\",\r\n  ]);\r\n\r\n  return {\r\n    props: {\r\n      posts: [...posts],\r\n    },\r\n  };\r\n}\r\n\r\nexport default Blog;\r\n","F:\\trinadh\\Portfolio\\template\\pages\\blog\\[slug].js",["108"],[],"import React, { useRef, useState } from \"react\";\r\nimport { getPostBySlug, getAllPosts } from \"../../utils/api\";\r\nimport Header from \"../../components/Header\";\r\nimport ContentSection from \"../../components/ContentSection\";\r\nimport Footer from \"../../components/Footer\";\r\nimport Head from \"next/head\";\r\nimport { useIsomorphicLayoutEffect } from \"../../utils\";\r\nimport { stagger } from \"../../animations\";\r\nimport Button from \"../../components/Button\";\r\nimport BlogEditor from \"../../components/BlogEditor\";\r\nimport { useRouter } from \"next/router\";\r\nimport Cursor from \"../../components/Cursor\";\r\nimport data from \"../../data/portfolio.json\";\r\n\r\nconst BlogPost = ({ post }) => {\r\n  const [showEditor, setShowEditor] = useState(false);\r\n  const textOne = useRef();\r\n  const textTwo = useRef();\r\n  const router = useRouter();\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    stagger([textOne.current, textTwo.current], { y: 30 }, { y: 0 });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{\"Blog - \" + post.title}</title>\r\n        <meta name=\"description\" content={post.preview} />\r\n      </Head>\r\n      {data.showCursor && <Cursor />}\r\n\r\n      <div\r\n        className={`container mx-auto mt-10 ${\r\n          data.showCursor && \"cursor-none\"\r\n        }`}\r\n      >\r\n        <Header isBlog={true} />\r\n        <div className=\"mt-10 flex flex-col\">\r\n          <img\r\n            className=\"w-full h-96 rounded-lg shadow-lg object-cover\"\r\n            src={post.image}\r\n            alt={post.title}\r\n          ></img>\r\n          <h1\r\n            ref={textOne}\r\n            className=\"mt-10 text-4xl mob:text-2xl laptop:text-6xl text-bold\"\r\n          >\r\n            {post.title}\r\n          </h1>\r\n          <h2\r\n            ref={textTwo}\r\n            className=\"mt-2 text-xl max-w-4xl text-darkgray opacity-50\"\r\n          >\r\n            {post.tagline}\r\n          </h2>\r\n        </div>\r\n        <ContentSection content={post.content}></ContentSection>\r\n        <Footer />\r\n      </div>\r\n      {process.env.NODE_ENV === \"development\" && (\r\n        <div className=\"fixed bottom-6 right-6\">\r\n          <Button onClick={() => setShowEditor(true)} type={\"primary\"}>\r\n            Edit this blog\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {showEditor && (\r\n        <BlogEditor\r\n          post={post}\r\n          close={() => setShowEditor(false)}\r\n          refresh={() => router.reload(window.location.pathname)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps({ params }) {\r\n  const post = getPostBySlug(params.slug, [\r\n    \"date\",\r\n    \"slug\",\r\n    \"preview\",\r\n    \"title\",\r\n    \"tagline\",\r\n    \"preview\",\r\n    \"image\",\r\n    \"content\",\r\n  ]);\r\n\r\n  return {\r\n    props: {\r\n      post: {\r\n        ...post,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const posts = getAllPosts([\"slug\"]);\r\n\r\n  return {\r\n    paths: posts.map((post) => {\r\n      return {\r\n        params: {\r\n          slug: post.slug,\r\n        },\r\n      };\r\n    }),\r\n    fallback: false,\r\n  };\r\n}\r\nexport default BlogPost;\r\n","F:\\trinadh\\Portfolio\\template\\pages\\edit.js",[],[],"F:\\trinadh\\Portfolio\\template\\pages\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\pages\\resume.js",["109"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport Cursor from \"../components/Cursor\";\r\nimport Header from \"../components/Header\";\r\nimport ProjectResume from \"../components/ProjectResume\";\r\nimport Socials from \"../components/Socials\";\r\nimport Button from \"../components/Button\";\r\nimport { useTheme } from \"next-themes\";\r\n// Data\r\nimport { name, showResume } from \"../data/portfolio.json\";\r\nimport { resume } from \"../data/portfolio.json\";\r\nimport data from \"../data/portfolio.json\";\r\n\r\nconst Resume = () => {\r\n  const router = useRouter();\r\n  const theme = useTheme();\r\n  const [mount, setMount] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMount(true);\r\n    if (!showResume) {\r\n      router.push(\"/\");\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      {process.env.NODE_ENV === \"development\" && (\r\n        <div className=\"fixed bottom-6 right-6\">\r\n          <Button onClick={() => router.push(\"/edit\")} type={\"primary\"}>\r\n            Edit Resume\r\n          </Button>\r\n        </div>\r\n      )}\r\n      {data.showCursor && <Cursor />}\r\n      <div\r\n        className={`container mx-auto mb-10 ${\r\n          data.showCursor && \"cursor-none\"\r\n        }`}\r\n      >\r\n        <Header isBlog />\r\n        {mount && (\r\n          <div className=\"mt-10 w-full flex flex-col items-center\">\r\n            <div\r\n              className={`w-full ${\r\n                mount && theme.theme === \"dark\" ? \"bg-slate-800\" : \"bg-gray-50\"\r\n              } max-w-4xl p-20 mob:p-5 desktop:p-20 rounded-lg shadow-sm`}\r\n            >\r\n              <h1 className=\"text-3xl font-bold\">{name}</h1>\r\n              <h2 className=\"text-xl mt-5\">{resume.tagline}</h2>\r\n              <h2 className=\"w-4/5 text-xl mt-5 opacity-50\">\r\n                {resume.description}\r\n              </h2>\r\n              <div className=\"mt-2\">\r\n                <Socials />\r\n              </div>\r\n              <div className=\"mt-5\">\r\n                <h1 className=\"text-2xl font-bold\">Experience</h1>\r\n\r\n                {resume.experiences.map(\r\n                  ({ id, dates, type, position, bullets }) => (\r\n                    <ProjectResume\r\n                      key={id}\r\n                      dates={dates}\r\n                      type={type}\r\n                      position={position}\r\n                      bullets={bullets}\r\n                    ></ProjectResume>\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"mt-5\">\r\n                <h1 className=\"text-2xl font-bold\">Education</h1>\r\n                <div className=\"mt-2\">\r\n                  <h2 className=\"text-lg\">{resume.education.universityName}</h2>\r\n                  <h3 className=\"text-sm opacity-75\">\r\n                    {resume.education.universityDate}\r\n                  </h3>\r\n                  <p className=\"text-sm mt-2 opacity-50\">\r\n                    {resume.education.universityPara}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-5\">\r\n                <h1 className=\"text-2xl font-bold\">Skills</h1>\r\n                <div className=\"flex mob:flex-col desktop:flex-row justify-between\">\r\n                  {resume.languages && (\r\n                    <div className=\"mt-2 mob:mt-5\">\r\n                      <h2 className=\"text-lg\">Languages</h2>\r\n                      <ul className=\"list-disc\">\r\n                        {resume.languages.map((language, index) => (\r\n                          <li key={index} className=\"ml-5 py-2\">\r\n                            {language}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n\r\n                  {resume.frameworks && (\r\n                    <div className=\"mt-2 mob:mt-5\">\r\n                      <h2 className=\"text-lg\">Frameworks</h2>\r\n                      <ul className=\"list-disc\">\r\n                        {resume.frameworks.map((framework, index) => (\r\n                          <li key={index} className=\"ml-5 py-2\">\r\n                            {framework}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n\r\n                  {resume.others && (\r\n                    <div className=\"mt-2 mob:mt-5\">\r\n                      <h2 className=\"text-lg\">Others</h2>\r\n                      <ul className=\"list-disc\">\r\n                        {resume.others.map((other, index) => (\r\n                          <li key={index} className=\"ml-5 py-2\">\r\n                            {other}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Resume;\r\n","F:\\trinadh\\Portfolio\\template\\pages\\_app.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\BlogEditor\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\Button\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\ContentSection\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\Cursor\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\Footer\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\Header\\index.js",["110","111","112","113","114","115","116","117"],[],"import { Popover } from \"@headlessui/react\";\r\nimport { useTheme } from \"next-themes\";\r\nimport { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Button from \"../Button\";\r\n// Local Data\r\nimport data from \"../../data/portfolio.json\";\r\n\r\nconst Header = ({ handleWorkScroll, handleAboutScroll, isBlog }) => {\r\n  const router = useRouter();\r\n  const { theme, setTheme } = useTheme();\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  const { name, showBlog, showResume } = data;\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Popover className=\"block tablet:hidden mt-5\">\r\n        {({ open }) => (\r\n          <>\r\n            <div className=\"flex items-center justify-between p-2 laptop:p-0\">\r\n              <h1\r\n                onClick={() => router.push(\"/\")}\r\n                className=\"font-medium p-2 laptop:p-0 link\"\r\n              >\r\n                {name}.\r\n              </h1>\r\n\r\n              <div className=\"flex items-center\">\r\n                {data.darkMode && (\r\n                  <Button\r\n                    onClick={() =>\r\n                      setTheme(theme === \"dark\" ? \"light\" : \"dark\")\r\n                    }\r\n                  >\r\n                    <img\r\n                      className=\"h-6\"\r\n                      src={`/images/${\r\n                        theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"\r\n                      }`}\r\n                    ></img>\r\n                  </Button>\r\n                )}\r\n\r\n                <Popover.Button>\r\n                  <img\r\n                    className=\"h-5\"\r\n                    src={`/images/${\r\n                      !open\r\n                        ? theme === \"dark\"\r\n                          ? \"menu-white.svg\"\r\n                          : \"menu.svg\"\r\n                        : theme === \"light\"\r\n                        ? \"cancel.svg\"\r\n                        : \"cancel-white.svg\"\r\n                    }`}\r\n                  ></img>\r\n                </Popover.Button>\r\n              </div>\r\n            </div>\r\n            <Popover.Panel\r\n              className={`absolute right-0 z-10 w-11/12 p-4 ${\r\n                theme === \"dark\" ? \"bg-slate-800\" : \"bg-white\"\r\n              } shadow-md rounded-md`}\r\n            >\r\n              {!isBlog ? (\r\n                <div className=\"grid grid-cols-1\">\r\n                  <Button onClick={handleWorkScroll}>Work</Button>\r\n                  <Button onClick={handleAboutScroll}>About</Button>\r\n                  {showBlog && (\r\n                    <Button onClick={() => router.push(\"/blog\")}>Blog</Button>\r\n                  )}\r\n                  {showResume && (\r\n                    <Button\r\n                      onClick={() =>\r\n                        window.open(\"mailto:hello@chetanverma.com\")\r\n                      }\r\n                    >\r\n                      Resume\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Button\r\n                    onClick={() => window.open(\"mailto:hello@chetanverma.com\")}\r\n                  >\r\n                    Contact\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"grid grid-cols-1\">\r\n                  <Button onClick={() => router.push(\"/\")} classes=\"first:ml-1\">\r\n                    Home\r\n                  </Button>\r\n                  {showBlog && (\r\n                    <Button onClick={() => router.push(\"/blog\")}>Blog</Button>\r\n                  )}\r\n                  {showResume && (\r\n                    <Button\r\n                      onClick={() => router.push(\"/resume\")}\r\n                      classes=\"first:ml-1\"\r\n                    >\r\n                      Resume\r\n                    </Button>\r\n                  )}\r\n\r\n                  <Button\r\n                    onClick={() => window.open(\"mailto:hello@chetanverma.com\")}\r\n                  >\r\n                    Contact\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </Popover.Panel>\r\n          </>\r\n        )}\r\n      </Popover>\r\n      <div\r\n        className={`mt-10 hidden flex-row items-center justify-between sticky ${\r\n          theme === \"light\" && \"bg-white\"\r\n        } dark:text-white top-0 z-10 tablet:flex`}\r\n      >\r\n        <h1\r\n          onClick={() => router.push(\"/\")}\r\n          className=\"font-medium cursor-pointer mob:p-2 laptop:p-0\"\r\n        >\r\n          {name}.\r\n        </h1>\r\n        {!isBlog ? (\r\n          <div className=\"flex\">\r\n            <Button onClick={handleWorkScroll}>Work</Button>\r\n            <Button onClick={handleAboutScroll}>About</Button>\r\n            {showBlog && (\r\n              <Button onClick={() => router.push(\"/blog\")}>Blog</Button>\r\n            )}\r\n            {showResume && (\r\n              <Button\r\n                onClick={() => router.push(\"/resume\")}\r\n                classes=\"first:ml-1\"\r\n              >\r\n                Resume\r\n              </Button>\r\n            )}\r\n\r\n            <Button onClick={() => window.open(\"mailto:hello@chetanverma.com\")}>\r\n              Contact\r\n            </Button>\r\n            {mounted && theme && data.darkMode && (\r\n              <Button\r\n                onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n              >\r\n                <img\r\n                  className=\"h-6\"\r\n                  src={`/images/${theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"}`}\r\n                ></img>\r\n              </Button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex\">\r\n            <Button onClick={() => router.push(\"/\")}>Home</Button>\r\n            {showBlog && (\r\n              <Button onClick={() => router.push(\"/blog\")}>Blog</Button>\r\n            )}\r\n            {showResume && (\r\n              <Button\r\n                onClick={() => router.push(\"/resume\")}\r\n                classes=\"first:ml-1\"\r\n              >\r\n                Resume\r\n              </Button>\r\n            )}\r\n\r\n            <Button onClick={() => window.open(\"mailto:hello@chetanverma.com\")}>\r\n              Contact\r\n            </Button>\r\n\r\n            {mounted && theme && data.darkMode && (\r\n              <Button\r\n                onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n              >\r\n                <img\r\n                  className=\"h-6\"\r\n                  src={`/images/${theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"}`}\r\n                ></img>\r\n              </Button>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","F:\\trinadh\\Portfolio\\template\\components\\ProjectResume\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\ServiceCard\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\Socials\\index.js",[],[],"F:\\trinadh\\Portfolio\\template\\components\\WorkCard\\index.js",["118"],[],"import React from \"react\";\r\n\r\nconst WorkCard = ({ img, name, description, onClick }) => {\r\n  return (\r\n    <div\r\n      className=\"overflow-hidden rounded-lg p-2 laptop:p-4 first:ml-0 link\"\r\n      onClick={onClick}\r\n    >\r\n      <div\r\n        className=\"relative rounded-lg overflow-hidden transition-all ease-out duration-300 h-48 mob:h-auto\"\r\n        style={{ height: \"600px\" }}\r\n      >\r\n        <img\r\n          alt={name}\r\n          className=\"h-full w-full object-cover hover:scale-110 transition-all ease-out duration-300\"\r\n          src={img}\r\n        ></img>\r\n      </div>\r\n      <h1 className=\"mt-5 text-3xl font-medium\">\r\n        {name ? name : \"Project Name\"}\r\n      </h1>\r\n      <h2 className=\"text-xl opacity-50\">\r\n        {description ? description : \"Description\"}\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkCard;\r\n","F:\\trinadh\\Portfolio\\template\\components\\Cursor\\useMousePosition.js",[],[],{"ruleId":"119","severity":1,"message":"120","line":91,"column":21,"nodeType":"121","endLine":95,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":40,"column":11,"nodeType":"121","endLine":44,"endColumn":12},{"ruleId":"122","severity":1,"message":"123","line":24,"column":6,"nodeType":"124","endLine":24,"endColumn":8,"suggestions":"125"},{"ruleId":"119","severity":1,"message":"120","line":40,"column":21,"nodeType":"121","endLine":45,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":40,"column":21,"nodeType":"121","endLine":45,"endColumn":22},{"ruleId":"119","severity":1,"message":"120","line":50,"column":19,"nodeType":"121","endLine":61,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":50,"column":19,"nodeType":"121","endLine":61,"endColumn":20},{"ruleId":"119","severity":1,"message":"120","line":155,"column":17,"nodeType":"121","endLine":158,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":155,"column":17,"nodeType":"121","endLine":158,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":185,"column":17,"nodeType":"121","endLine":188,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":185,"column":17,"nodeType":"121","endLine":188,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":13,"column":9,"nodeType":"121","endLine":17,"endColumn":10},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"129","fix":"130"},"Update the dependencies array to be: [router]",{"range":"131","text":"132"},[772,774],"[router]"]